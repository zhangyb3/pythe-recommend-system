<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pythe.mapper.NewsLogsMapper" >
  <resultMap id="BaseResultMap" type="com.pythe.pojo.NewsLogs" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="news_id" property="newsId" jdbcType="BIGINT" />
    <result column="view_time" property="viewTime" jdbcType="TIMESTAMP" />
    <result column="prefer_degree" property="preferDegree" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, news_id, view_time, prefer_degree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pythe.pojo.NewsLogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from news_logs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from news_logs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pythe.pojo.NewsLogsExample" >
    delete from news_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pythe.pojo.NewsLogs" >
    insert into news_logs (id, user_id, news_id, 
      view_time, prefer_degree)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{newsId,jdbcType=BIGINT}, 
      #{viewTime,jdbcType=TIMESTAMP}, #{preferDegree,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pythe.pojo.NewsLogs" >
    insert into news_logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="viewTime != null" >
        view_time,
      </if>
      <if test="preferDegree != null" >
        prefer_degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="newsId != null" >
        #{newsId,jdbcType=BIGINT},
      </if>
      <if test="viewTime != null" >
        #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preferDegree != null" >
        #{preferDegree,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pythe.pojo.NewsLogsExample" resultType="java.lang.Integer" >
    select count(*) from news_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news_logs
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=BIGINT},
      </if>
      <if test="record.viewTime != null" >
        view_time = #{record.viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preferDegree != null" >
        prefer_degree = #{record.preferDegree,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news_logs
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      news_id = #{record.newsId,jdbcType=BIGINT},
      view_time = #{record.viewTime,jdbcType=TIMESTAMP},
      prefer_degree = #{record.preferDegree,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pythe.pojo.NewsLogs" >
    update news_logs
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="newsId != null" >
        news_id = #{newsId,jdbcType=BIGINT},
      </if>
      <if test="viewTime != null" >
        view_time = #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preferDegree != null" >
        prefer_degree = #{preferDegree,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pythe.pojo.NewsLogs" >
    update news_logs
    set user_id = #{userId,jdbcType=BIGINT},
      news_id = #{newsId,jdbcType=BIGINT},
      view_time = #{viewTime,jdbcType=TIMESTAMP},
      prefer_degree = #{preferDegree,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="NewsVisitStatisticsMap" type="com.pythe.pojo.VNewsVisitStatistics" >

    <result column="news_id" property="newsId" jdbcType="BIGINT" />
    
    <result column="visit_num" property="visitNum" jdbcType="BIGINT" />
    
  </resultMap>
  
  <select id="queryNewsLogsTheDate" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" /> 
    from news_logs 
    where view_time &gt; #{date}
    
  </select>
  
  
  <select id="queryNewsVisitStatisticsAfterDate" resultMap="NewsVisitStatisticsMap" >
    select news_id,count(*) as visit_num 
    from news_logs 
    where view_time &gt; #{date}
    group by news_id 
    order by visit_num desc
  </select>
  
  
</mapper>